Functional Tests

testDifferentTravelMethod (testSimple.TestGenerateRoute) ... ok
testNoConstrainMultiPlaces (testSimple.TestGenerateRoute) ... ok
testNoConstrainMultiPlacesError (testSimple.TestGenerateRoute) ... ok
testNoConstrainMultiPlacesSize (testSimple.TestGenerateRoute) ... ok
testNoConstrainOnePlace (testSimple.TestGenerateRoute) ... ok
testNoConstrainOnePlaceError (testSimple.TestGenerateRoute) ... ok
testNoConstrainOnePlaceSize (testSimple.TestGenerateRoute) ... ok
testNoConstrainTwoPlacesError (testSimple.TestGenerateRoute) ... ok

=========================
Unit Tests

Total of 16 tests, mainly testing:
1. whether the fields are properly registered in the database table
2. when the required fields are missing, whether the database rejects the insertion

Note: the majority of our tests is in Functional Tests. This is because in Rails, 
especially under rspec framework, the unit tests can mostly test the model of the 
MVC structure. However, for our project, the main function lies in the controller.

=======================
GUI Tests

Add location

1. a marker is displayed in the designated location and the screen focus changed accordingly
2. an new entry in the "selected location" is generated

Remove location

1. the corresponding marker is removed
2. the entry of the "selected location" list is removed

Selected Location Accordion

1. the list is sortable, the correspondance between the marker and the entry is invarient
2. the list can correctly collapse

View result

1. the input sent to the backend is properly formatted
2. the input corresponds to the information as listed in the "selected location" list
3. after the button is pressed, a new dropdown portal is created to inform the user that the server is generating result
4. after the result is generated by the backend, the portal is replaced with instructions and a new portal appears
5. click on the new portal, the detailed directions will be listed and the map will draw the directions
6. when the view result button is pressed again, the portal is cleared.